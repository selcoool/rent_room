name: Deploy to VPS 2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Display GitHub Username
      run: echo "Repository:" ${{ github.repository }}

    - name: Display actor Name
      run: echo "Actor:" ${{ github.actor }}

    - name: Display server VPS_IP
      run: echo "VPS_IP:" ${{ secrets.VPS_IP }}

    - name: Display server VPS_PASSWORD
      run: echo "VPS_PASSWORD:" ${{ secrets.VPS_PASSWORD }}


    - name: SSH to VPS and update project
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_IP }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}  # Sử dụng nếu bạn dùng mật khẩu cho SSH
        # key: ${{ secrets.VPS_SSH_KEY }}  # Sử dụng nếu bạn dùng khóa SSH

        script: |
          echo "Checking if the project directory exists..."
          if [ -d "/root/rent_room" ]; then
            echo "Directory exists. Pulling latest changes..."
            cd /root/rent_room
            if [ -d ".git" ]; then
              git pull origin main
              docker stop $(docker ps -aq) || true
              docker rm $(docker ps -aq) || true
              docker rmi $(docker images -q) || true
              docker-compose up -d
            else
              echo "Not a git repository. Cloning again..."
              rm -rf /root/rent_room
              git clone https://github.com/${{ github.repository }} /root/rent_room
              docker stop $(docker ps -aq) || true
              docker rm $(docker ps -aq) || true
              docker rmi $(docker images -q) || true
              docker-compose up -d
            fi
          else
            echo "Directory does not exist. Creating and cloning..."
            mkdir -p /root/rent_room
            git clone https://github.com/${{ github.repository }} /root/rent_room
            docker stop $(docker ps -aq) || true
            docker rm $(docker ps -aq) || true
            docker rmi $(docker images -q) || true
            docker-compose up -d
          fi
          echo "Directory and repository setup complete."
        # script: |
        #   cd /root || git clone https://github.com/secoool/rent_room.git /path/to/your/project && cd /path/to/your/project
        #   git pull origin main
        #   docker stop $(docker ps -aq) || true
        #   docker rm $(docker ps -aq) || true
        #   docker rmi $(docker images -q) || true
        #   docker-compose up -d



# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [20.x, 21.x, 22.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#      steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Display GitHub Username
#       run: echo "Repository:" ${{ github.repository }}

#     - name: Display actor Name
#       run: echo "Actor:" ${{ github.actor }}
